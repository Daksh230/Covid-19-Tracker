[{"D:\\Vips\\covid-19-tracker\\src\\index.js":"1","D:\\Vips\\covid-19-tracker\\src\\reportWebVitals.js":"2","D:\\Vips\\covid-19-tracker\\src\\App.js":"3","D:\\Vips\\covid-19-tracker\\src\\Infobox.js":"4","D:\\Vips\\covid-19-tracker\\src\\Map.js":"5","D:\\Vips\\covid-19-tracker\\src\\util.js":"6","D:\\Vips\\covid-19-tracker\\src\\Table.js":"7","D:\\Vips\\covid-19-tracker\\src\\LineGraph.js":"8"},{"size":500,"mtime":1610156175039,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":4015,"mtime":1610157741130,"results":"12","hashOfConfig":"10"},{"size":983,"mtime":1610156230545,"results":"13","hashOfConfig":"10"},{"size":2236,"mtime":1610157091728,"results":"14","hashOfConfig":"10"},{"size":305,"mtime":1610156360623,"results":"15","hashOfConfig":"10"},{"size":517,"mtime":1610156346105,"results":"16","hashOfConfig":"10"},{"size":2577,"mtime":1610156575574,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"16dhcgc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"D:\\Vips\\covid-19-tracker\\src\\index.js",[],["38","39"],"D:\\Vips\\covid-19-tracker\\src\\reportWebVitals.js",[],"D:\\Vips\\covid-19-tracker\\src\\App.js",[],"D:\\Vips\\covid-19-tracker\\src\\Infobox.js",[],"D:\\Vips\\covid-19-tracker\\src\\Map.js",["40","41","42","43"],"import React, { useRef, useEffect } from \"react\";\r\nimport { Circle, MapContainer as LeafletMap, Popup, TileLayer, useMap, useMapEvents } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport numeral from \"numeral\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#B22222\",\r\n    multiplier: 400,\r\n  },\r\n\r\n  recovered: {\r\n    hex: \"#228B22\",\r\n    multiplier: 800,\r\n  },\r\n\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    multiplier: 1400,\r\n  },\r\n};\r\n\r\n\r\n\r\nfunction MyComponent({ countries, center, zoom }) {\r\n\r\n  let map = useMap();\r\n  map.flyTo(center, zoom)\r\n\r\n  return (\r\n    <TileLayer\r\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    />\r\n\r\n  )\r\n}\r\n\r\nfunction Map({ casesType, countries, center, zoom }) {\r\n\r\nconsole.log(casesType)\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap countries={countries} center={center} zoom={zoom} >\r\n        <MyComponent countries={countries} center={center} zoom={zoom} />\r\n\r\n        {\r\n\r\n          countries.map((country) => (\r\n            \r\n            <Circle center={[country.countryInfo.lat, country.countryInfo.long]}\r\n              fillOpacity={0.4}\r\n              color={casesTypeColors[casesType].hex}\r\n              fillcolor={casesTypeColors[casesType].hex}\r\n              radius={Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier}>\r\n              \r\n              <Popup>\r\n                <div className=\"info-container\">\r\n                  <div className=\"info-flag\" style={{backgroundImage:`url(${country.countryInfo.flag})` }} />\r\n\r\n                  <div className=\"info-name\">{country.country}</div>\r\n                  <div className=\"info-confirmed\">Cases: {numeral(country.cases).format(\"0,0\")}</div>\r\n                  <div className=\"info-recovered\">Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\r\n                  <div className=\"info-deaths\">Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\r\n                </div>\r\n              </Popup>\r\n            \r\n            </Circle>\r\n          ))\r\n        }\r\n\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","D:\\Vips\\covid-19-tracker\\src\\util.js",["44","45"],"import React, {useEffect} from 'react';\r\nimport numeral from 'numeral';\r\n\r\n\r\nexport const sortData =(data)=>{\r\n    const sortedData = [...data];\r\n\r\n   return sortedData.sort((a,b)=> (a.cases>b.cases?-1:1));\r\n}\r\n\r\nexport const prettyPrintStat=(stat)=>\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}`:\"+0\";\r\n","D:\\Vips\\covid-19-tracker\\src\\Table.js",[],"D:\\Vips\\covid-19-tracker\\src\\LineGraph.js",["46"],"import React,{useEffect, useState} from 'react'\r\nimport {Line} from \"react-chartjs-2\";\r\nimport numeral,{tooltipItem} from 'numeral'\r\n\r\nconst options ={\r\n    legend:{\r\n        display:false,\r\n    },\r\n\r\n    elements:{\r\n        point:{\r\n            radius:0,\r\n        },\r\n    },\r\n    maintainAspectRatio:true,\r\n    tooltips:{\r\n        mode:\"index\",\r\n        intersect:false,\r\n        callbacks: {\r\n            label: function(tooltipItem, data){\r\n                return numeral(tooltipItem.value).format(\"+0,0\");\r\n            },\r\n        },\r\n    },\r\n\r\n    scales:{\r\n        xAxes:[\r\n            {\r\n                type:\"time\",\r\n                time:{\r\n                    format:\"MM/DD/YY\",\r\n                    tooltipFormat: \"ll\",\r\n                },\r\n            },\r\n        ],\r\n        yAxes:[\r\n            {\r\n                gridLines:{\r\n                    display:false,\r\n                },\r\n                ticks:{\r\n                    callback: function(value, index, values){\r\n                        return numeral(value).format(\"0a\");\r\n                    },\r\n                },\r\n            },\r\n        ]\r\n    }\r\n}\r\n\r\n\r\nconst buildChartData=(data, casesType='cases')=>{\r\n    let chartData= [];\r\n    let lastDataPoint;\r\n\r\n    for(let date in data.cases) {\r\n        if(lastDataPoint){\r\n            let newDataPoint={\r\n                x:date,\r\n                y:data[casesType][date]-lastDataPoint,\r\n            };\r\n            chartData.push(newDataPoint);\r\n        }\r\n        lastDataPoint = data[casesType][date];\r\n    };\r\n    \r\n    return chartData;\r\n};\r\n\r\n\r\nfunction LineGraph({casesType, ...props}) {\r\n    const [data,setData]=useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async() =>{\r\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n            .then((response)=>response.json())\r\n            .then((data)=>{\r\n                let chartData=buildChartData(data,casesType);\r\n                setData(chartData);\r\n            });\r\n        };\r\n        \r\n        fetchData();\r\n    } , [casesType]);\r\n\r\n   \r\n    return (\r\n        <div className={props.className}>\r\n            {data?.length>0 &&(\r\n                <Line\r\n                options={options}\r\n                data={{\r\n                    datasets:[{\r\n                        data:data,\r\n                        backgroundColor:\"rgba(204, 16, 52, 0.5\",\r\n                        borderColor:\"#CC1034\"\r\n                    }]\r\n                }}\r\n                />\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n",{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":23},{"ruleId":"51","severity":1,"message":"55","line":1,"column":25,"nodeType":"53","messageId":"54","endLine":1,"endColumn":34},{"ruleId":"51","severity":1,"message":"56","line":2,"column":72,"nodeType":"53","messageId":"54","endLine":2,"endColumn":84},{"ruleId":"51","severity":1,"message":"57","line":5,"column":10,"nodeType":"53","messageId":"54","endLine":5,"endColumn":15},{"ruleId":"51","severity":1,"message":"58","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"55","line":1,"column":16,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"59","line":3,"column":17,"nodeType":"53","messageId":"54","endLine":3,"endColumn":28},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useMapEvents' is defined but never used.","'green' is defined but never used.","'React' is defined but never used.","'tooltipItem' is defined but never used.","no-global-assign","no-unsafe-negation"]